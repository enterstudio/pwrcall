# Python stubs generated by omniidl from math.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "Math"
#
__name__ = "Math"
_0_Math = omniORB.openModule("Math", r"math.idl")
_0_Math__POA = omniORB.openModule("Math__POA", r"math.idl")


# interface MathServer
_0_Math._d_MathServer = (omniORB.tcInternal.tv_objref, "IDL:Math/MathServer:1.0", "MathServer")
omniORB.typeMapping["IDL:Math/MathServer:1.0"] = _0_Math._d_MathServer
_0_Math.MathServer = omniORB.newEmptyClass()
class MathServer :
    _NP_RepositoryId = _0_Math._d_MathServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Math.MathServer = MathServer
_0_Math._tc_MathServer = omniORB.tcInternal.createTypeCode(_0_Math._d_MathServer)
omniORB.registerType(MathServer._NP_RepositoryId, _0_Math._d_MathServer, _0_Math._tc_MathServer)

# MathServer operations and attributes
MathServer._d_add = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (omniORB.tcInternal.tv_long, ), None)
MathServer._d_mul = ((omniORB.tcInternal.tv_long, omniORB.tcInternal.tv_long), (omniORB.tcInternal.tv_long, ), None)

# MathServer object reference
class _objref_MathServer (CORBA.Object):
    _NP_RepositoryId = MathServer._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def add(self, *args):
        return _omnipy.invoke(self, "add", _0_Math.MathServer._d_add, args)

    def mul(self, *args):
        return _omnipy.invoke(self, "mul", _0_Math.MathServer._d_mul, args)

    __methods__ = ["add", "mul"] + CORBA.Object.__methods__

omniORB.registerObjref(MathServer._NP_RepositoryId, _objref_MathServer)
_0_Math._objref_MathServer = _objref_MathServer
del MathServer, _objref_MathServer

# MathServer skeleton
__name__ = "Math__POA"
class MathServer (PortableServer.Servant):
    _NP_RepositoryId = _0_Math.MathServer._NP_RepositoryId


    _omni_op_d = {"add": _0_Math.MathServer._d_add, "mul": _0_Math.MathServer._d_mul}

MathServer._omni_skeleton = MathServer
_0_Math__POA.MathServer = MathServer
omniORB.registerSkeleton(MathServer._NP_RepositoryId, MathServer)
del MathServer
__name__ = "Math"

#
# End of module "Math"
#
__name__ = "math_idl"

_exported_modules = ( "Math", )

# The end.
